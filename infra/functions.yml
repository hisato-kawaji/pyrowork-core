AWSTemplateFormatVersion: '2010-09-09'
    Transform: AWS::Serverless-2016-10-31
Description: Lambda function setup template
Resources:
  SwaggerApi:
    Properties: {DefinitionUri: '{s3 path}', StageName: Stage Name}
    Type: AWS::Serverless::Api
  LambdaAccessRole:
    Properties:
      AssumeRolePolicyDocument:
        Statement:
        - Action: ['sts:AssumeRole']
          Effect: Allow
          Principal:
            Service: [lambda.amazonaws.com]
        Version: '2012-10-17'
      ManagedPolicyArns: []
      Path: /
      Policies: []
      RoleName: Role Name
    Type: AWS::IAM::Role
  DefaultFunction:
    Properties:
      CodeUri: {your lambda zip file path}
      Description: ''
      Environment:
        Variables: {table_name : dynamo table name}
      FunctionName: Function Name
      Handler: lambda_function.lambda_handler
      MemorySize: 128
      Role:
        Fn::GetAtt: [LambdaAccessRole, Arn]
      Runtime: python3.6
      Timeout: 3
    Type: AWS::Serverless::Function
  DefaultVersioning:
    Properties:
      FunctionName: {Ref: DefaultFunction}
    Type: AWS::Lambda::Version
  InvokeDefaultFunction:
    DependsOn: [SwaggerApi, CareUsersId]
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt: [DefaultFunction, Arn]
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
        - ''
        - - 'arn:aws:execute-api:'
          - {Ref: 'AWS::Region'}
          - ':'
          - {Ref: 'AWS::AccountId'}
          - ':'
          - {Ref: SwaggerApi}
          - /*
    Type: AWS::Lambda::Permission

